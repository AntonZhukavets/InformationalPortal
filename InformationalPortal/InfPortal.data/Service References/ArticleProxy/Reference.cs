//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfPortal.data.ArticleProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleEntity", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Entities")]
    [System.SerializableAttribute()]
    public partial class ArticleEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InfPortal.data.ArticleProxy.InfoEntity DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InfPortal.data.ArticleProxy.InfoEntity Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureLink {
            get {
                return this.PictureLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureLinkField, value) != true)) {
                    this.PictureLinkField = value;
                    this.RaisePropertyChanged("PictureLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoEntity", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Entities")]
    [System.SerializableAttribute()]
    public partial class InfoEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoLink {
            get {
                return this.VideoLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoLinkField, value) != true)) {
                    this.VideoLinkField = value;
                    this.RaisePropertyChanged("VideoLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Implementations")]
    [System.SerializableAttribute()]
    public partial class ServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ArticleProxy.IArticleService")]
    public interface IArticleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticles", ReplyAction="http://tempuri.org/IArticleService/GetArticlesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(InfPortal.data.ArticleProxy.ServiceException), Action="http://tempuri.org/IArticleService/GetArticlesServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Implementations")]
        InfPortal.data.ArticleProxy.ArticleEntity[] GetArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticles", ReplyAction="http://tempuri.org/IArticleService/GetArticlesResponse")]
        System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity[]> GetArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticleById", ReplyAction="http://tempuri.org/IArticleService/GetArticleByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IArticleService/GetArticleByIdArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(InfPortal.data.ArticleProxy.ServiceException), Action="http://tempuri.org/IArticleService/GetArticleByIdServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Implementations")]
        InfPortal.data.ArticleProxy.ArticleEntity GetArticleById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticleById", ReplyAction="http://tempuri.org/IArticleService/GetArticleByIdResponse")]
        System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity> GetArticleByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticleByName", ReplyAction="http://tempuri.org/IArticleService/GetArticleByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IArticleService/GetArticleByNameArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(InfPortal.data.ArticleProxy.ServiceException), Action="http://tempuri.org/IArticleService/GetArticleByNameServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Implementations")]
        InfPortal.data.ArticleProxy.ArticleEntity[] GetArticleByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticleByName", ReplyAction="http://tempuri.org/IArticleService/GetArticleByNameResponse")]
        System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity[]> GetArticleByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticleNamesByInput", ReplyAction="http://tempuri.org/IArticleService/GetArticleNamesByInputResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(InfPortal.data.ArticleProxy.ServiceException), Action="http://tempuri.org/IArticleService/GetArticleNamesByInputServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Implementations")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IArticleService/GetArticleNamesByInputArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        string[] GetArticleNamesByInput(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticleNamesByInput", ReplyAction="http://tempuri.org/IArticleService/GetArticleNamesByInputResponse")]
        System.Threading.Tasks.Task<string[]> GetArticleNamesByInputAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticlesByHeadingId", ReplyAction="http://tempuri.org/IArticleService/GetArticlesByHeadingIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(InfPortal.data.ArticleProxy.ServiceException), Action="http://tempuri.org/IArticleService/GetArticlesByHeadingIdServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Implementations")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IArticleService/GetArticlesByHeadingIdArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        InfPortal.data.ArticleProxy.ArticleEntity[] GetArticlesByHeadingId(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticlesByHeadingId", ReplyAction="http://tempuri.org/IArticleService/GetArticlesByHeadingIdResponse")]
        System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity[]> GetArticlesByHeadingIdAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetCountOfArticles", ReplyAction="http://tempuri.org/IArticleService/GetCountOfArticlesResponse")]
        int GetCountOfArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetCountOfArticles", ReplyAction="http://tempuri.org/IArticleService/GetCountOfArticlesResponse")]
        System.Threading.Tasks.Task<int> GetCountOfArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticlesByUserId", ReplyAction="http://tempuri.org/IArticleService/GetArticlesByUserIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(InfPortal.data.ArticleProxy.ServiceException), Action="http://tempuri.org/IArticleService/GetArticlesByUserIdServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Implementations")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IArticleService/GetArticlesByUserIdArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        InfPortal.data.ArticleProxy.ArticleEntity[] GetArticlesByUserId(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticlesByUserId", ReplyAction="http://tempuri.org/IArticleService/GetArticlesByUserIdResponse")]
        System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity[]> GetArticlesByUserIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/AddArticle", ReplyAction="http://tempuri.org/IArticleService/AddArticleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(InfPortal.data.ArticleProxy.ServiceException), Action="http://tempuri.org/IArticleService/AddArticleServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/InfPortal.service.Implementations")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IArticleService/AddArticleArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool AddArticle(InfPortal.data.ArticleProxy.ArticleEntity article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/AddArticle", ReplyAction="http://tempuri.org/IArticleService/AddArticleResponse")]
        System.Threading.Tasks.Task<bool> AddArticleAsync(InfPortal.data.ArticleProxy.ArticleEntity article);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IArticleServiceChannel : InfPortal.data.ArticleProxy.IArticleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ArticleServiceClient : System.ServiceModel.ClientBase<InfPortal.data.ArticleProxy.IArticleService>, InfPortal.data.ArticleProxy.IArticleService {
        
        public ArticleServiceClient() {
        }
        
        public ArticleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ArticleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArticleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArticleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InfPortal.data.ArticleProxy.ArticleEntity[] GetArticles() {
            return base.Channel.GetArticles();
        }
        
        public System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity[]> GetArticlesAsync() {
            return base.Channel.GetArticlesAsync();
        }
        
        public InfPortal.data.ArticleProxy.ArticleEntity GetArticleById(System.Nullable<int> id) {
            return base.Channel.GetArticleById(id);
        }
        
        public System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity> GetArticleByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetArticleByIdAsync(id);
        }
        
        public InfPortal.data.ArticleProxy.ArticleEntity[] GetArticleByName(string name) {
            return base.Channel.GetArticleByName(name);
        }
        
        public System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity[]> GetArticleByNameAsync(string name) {
            return base.Channel.GetArticleByNameAsync(name);
        }
        
        public string[] GetArticleNamesByInput(string name) {
            return base.Channel.GetArticleNamesByInput(name);
        }
        
        public System.Threading.Tasks.Task<string[]> GetArticleNamesByInputAsync(string name) {
            return base.Channel.GetArticleNamesByInputAsync(name);
        }
        
        public InfPortal.data.ArticleProxy.ArticleEntity[] GetArticlesByHeadingId(System.Nullable<int> Id) {
            return base.Channel.GetArticlesByHeadingId(Id);
        }
        
        public System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity[]> GetArticlesByHeadingIdAsync(System.Nullable<int> Id) {
            return base.Channel.GetArticlesByHeadingIdAsync(Id);
        }
        
        public int GetCountOfArticles() {
            return base.Channel.GetCountOfArticles();
        }
        
        public System.Threading.Tasks.Task<int> GetCountOfArticlesAsync() {
            return base.Channel.GetCountOfArticlesAsync();
        }
        
        public InfPortal.data.ArticleProxy.ArticleEntity[] GetArticlesByUserId(System.Nullable<int> id) {
            return base.Channel.GetArticlesByUserId(id);
        }
        
        public System.Threading.Tasks.Task<InfPortal.data.ArticleProxy.ArticleEntity[]> GetArticlesByUserIdAsync(System.Nullable<int> id) {
            return base.Channel.GetArticlesByUserIdAsync(id);
        }
        
        public bool AddArticle(InfPortal.data.ArticleProxy.ArticleEntity article) {
            return base.Channel.AddArticle(article);
        }
        
        public System.Threading.Tasks.Task<bool> AddArticleAsync(InfPortal.data.ArticleProxy.ArticleEntity article) {
            return base.Channel.AddArticleAsync(article);
        }
    }
}
